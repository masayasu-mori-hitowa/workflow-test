name: Auto Merge Develop to Base Branches and Handle Conflicts

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  merge-develop-into-base-branches:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
        # マージしたブランチが削除するのを待つために30秒後に実行する
      - name: Wait for 1 hour before continuing
        run: |
          sleep 30

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get the list of base/* branches
        run: |
          git fetch --all
          BASE_BRANCHES=$(git branch -r | grep 'origin/base/' | sed 's/origin\///' | tr -d '\n' | tr -s ' ')
          echo "BASE_BRANCHES=${BASE_BRANCHES}" >> $GITHUB_ENV

      - name: Log in to GitHub CLI
        run: |
          gh auth login --with-token < $GITHUB_TOKEN

      - name: Merge develop into base branches
        run: |
          for BASE_BRANCH in $BASE_BRANCHES; do
            echo "Merging develop into $BASE_BRANCH"
            git checkout $BASE_BRANCH
            git pull origin $BASE_BRANCH
            git merge origin/develop || {
              echo "Merge conflict detected in $BASE_BRANCH. Creating conflict-fix branch."
              git checkout -b conflict-fix/${BASE_BRANCH}-develop
              git merge origin/develop --strategy=recursive --strategy-option=theirs
              git push origin conflict-fix/${BASE_BRANCH}-develop
              
              # PR title and body
              PR_TITLE="Auto merge conflict-fix: ${BASE_BRANCH} into develop"
              PR_BODY="Base branch ${BASE_BRANCH} had a conflict during the merge with develop. Please resolve conflicts in this PR."
              
              # Get the user who merged the original develop PR
              MERGE_COMMIT_SHA=$(git log -1 --merges --pretty=format:"%H")
              MERGE_COMMITTER=$(git show -s --format='%an' ${MERGE_COMMIT_SHA})
              
              # Create PR using github-script
              gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base "$BASE_BRANCH" --head "conflict-fix/${BASE_BRANCH}-develop" --repo $GITHUB_REPOSITORY --assignee "$MERGE_COMMITTER, masayasu-mori-hitowa"
            }
          done

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  pull-requests: write
