name: Merge and Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'GitHub Release Title'
        required: true
        type: string

jobs:
  merge_to_main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # PRを作成する
      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
#             const releaseTitle = '${{ github.event.inputs.release_title }}';
            const response = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'リリース v1.0.0',
              head: 'stage',  # PRの元となるブランチ
              base: 'main',  # PRのマージ先となるブランチ
              body: '',
            });

            const prNumber = response.data.number;
            console.log('Pull Request created:', response.data.html_url);

            return prNumber;  # PR番号を次のステップに渡す

      # PRが作成された後に承認
      - name: Approve Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
            const prNumber = ${{ steps.create-pr.outputs.result }};  # 前のステップで作成したPR番号を取得
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            # PRに対して承認を追加
            const response = await github.pulls.createReview({
              owner,
              repo,
              pull_number: prNumber,
              event: 'APPROVE',  # PRを承認
            });

            console.log('Pull Request approved:', response.data);

      # PRが承認された後にマージ
      - name: Merge Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
            const prNumber = ${{ steps.create-pr.outputs.result }};  # 前のステップで作成したPR番号を取得
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            # PRをマージ
            const response = await github.pulls.merge({
              owner,
              repo,
              pull_number: prNumber,
              commit_title: `Merge PR #${prNumber}`,
              merge_method: 'merge', 
            });

            console.log('Pull Request merged:', response.data);

  merge_to_develop:
    runs-on: ubuntu-latest
    needs: merge_to_main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # PRを作成する
      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
#             const releaseTitle = '${{ github.event.inputs.release_title }}';
            const response = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `リリース 1.0.0`,
              head: 'main',  # PRの元となるブランチ
              base: 'develop',  # PRのマージ先となるブランチ
              body: '',
            });

            const prNumber = response.data.number;
            console.log('Pull Request created:', response.data.html_url);

            return prNumber;  # PR番号を次のステップに渡す

      # PRが作成された後に承認
      - name: Approve Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
            const prNumber = ${{ steps.create-pr.outputs.result }};  # 前のステップで作成したPR番号を取得
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            # PRに対して承認を追加
            const response = await github.pulls.createReview({
              owner,
              repo,
              pull_number: prNumber,
              event: 'APPROVE',  # PRを承認
            });

            console.log('Pull Request approved:', response.data);

      # PRが承認された後にマージ
      - name: Merge Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_MERGE_TOKEN }}
          script: |
            const prNumber = ${{ steps.create-pr.outputs.result }};  # 前のステップで作成したPR番号を取得
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            # PRをマージ
            const response = await github.pulls.merge({
              owner,
              repo,
              pull_number: prNumber,
              commit_title: `Merge PR #${prNumber}`,
              merge_method: 'merge', 
            });

            console.log('Pull Request merged:', response.data);

  create_tag_and_release:
    runs-on: ubuntu-latest
    needs: merge_to_develop
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            ref: 'main'

      - name: Create a tag for main
        run: |
          VERSION_TAG="${{ github.event.inputs.release_title }}"
          git tag $VERSION_TAG
          git push origin $VERSION_TAG

      - name: Create GitHub Release using action-gh-release
        uses: softprops/action-gh-release@v2
        with:
            tag_name: "${{ github.event.inputs.release_title }}"
            name: "${{ github.event.inputs.release_title }}"
            generate_release_notes: true
            draft: false
            prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

