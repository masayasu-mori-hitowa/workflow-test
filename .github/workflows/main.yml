name: Merge and Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'GitHub Release Title'
        required: true
        type: string
permissions:
  pull-requests: write # PR を作成・マージするための権限
  actions: write   # GitHub Actions の権限
  contents: write    # リポジトリの管理権限（タグ作成、リリース作成）

jobs:
  login_gh:
    runs-on: ubuntu-latest
    steps:
      - name: login
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
 
  merge_to_main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            ref: 'stage'

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://github.com/cli/cli/releases/download/v2.7.0/gh_2.7.0_linux_amd64.deb -o gh.deb
          sudo dpkg -i gh.deb

      - name: Ensure branch `stage` exists
        run: git fetch origin stage

      - name: Create Pull Request from `stage` to `main`
        id: pr_create_main
        uses: peter-evans/create-pull-request@v7
        with:
          title: 'Merge stage to main'
          body: 'Automated pull request to merge `stage` into `main`.'
          branch: stage
          base: main
          commit-message: 'Merging stage into main'
          labels: 'auto-merge'
          delete-branch: false
          
      - name: Auto approve
        if: steps.pr_create_main.outputs.pull-request-operation == 'created'
        run: gh pr review --approve "${{ steps.pr_create_main.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Pull Request Automerge
        if: steps.pr_create_main.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.pr_create_main.outputs.pull-request-number }}
          merge-method: merge

  merge_to_develop:
    runs-on: ubuntu-latest
    needs: merge_to_main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Create Pull Request from `main` to `develop`
        id: pr_create_develop
        uses: peter-evans/create-pull-request@v7
        with:
          title: 'Merge main to develop'
          body: 'Automated pull request to merge `main` into `develop`.'
          branch: main
          base: develop
          commit-message: 'Merging main into develop'
          labels: 'auto-merge'
          delete-branch: false
          
      - name: Auto approve
        if: steps.pr_create_develop.outputs.pull-request-operation == 'created'
        run: gh pr review --approve "${{ steps.pr_create_develop.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Pull Request Automerge
        if: steps.pr_create_develop.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.pr_create_develop.outputs.pull-request-number }}
          merge-method: merge

  create_tag_and_release:
    runs-on: ubuntu-latest
    needs: merge_to_develop
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            ref: 'main'

      - name: Create a tag for main
        run: |
          VERSION_TAG="${{ github.event.inputs.release_title }}"
          git tag $VERSION_TAG
          git push origin $VERSION_TAG

      - name: Create GitHub Release using action-gh-release
        uses: softprops/action-gh-release@v2
        with:
            tag_name: "${{ github.event.inputs.release_title }}"
            name: "${{ github.event.inputs.release_title }}"
            generate_release_notes: true
            draft: false
            prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

